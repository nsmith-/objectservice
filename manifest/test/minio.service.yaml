apiVersion: v1
kind: Service
metadata:
  name: minio
spec:
  selector:
    app: minio
  ports:
    - name: s3
      protocol: TCP
      port: 9000
      targetPort: 9000
---
apiVersion: v1
kind: Service
metadata:
  name: minio-console
spec:
  selector:
    app: minio
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 9001
      targetPort: 9001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: "minio/minio"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9000
            - containerPort: 9001
          command: ["minio", "server", "/data", "--console-address", ":9001"]
          env:
            - name: MINIO_NOTIFY_AMQP_ENABLE_RABBITMQ
              value: "on"
            - name: MINIO_NOTIFY_AMQP_URL_RABBITMQ
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: AMQP_URL
            - name: MINIO_NOTIFY_AMQP_EXCHANGE_RABBITMQ
              valueFrom: 
                configMapKeyRef:
                  name: rabbitmq-config
                  key: AMQP_EXCHANGE
            - name: MINIO_NOTIFY_AMQP_ROUTING_KEY_RABBITMQ
              valueFrom: 
                configMapKeyRef:
                  name: rabbitmq-config
                  key: AMQP_TRANSFER_TOPIC
            - name: MINIO_NOTIFY_AMQP_EXCHANGE_TYPE_RABBITMQ
              value: "topic"
            - name: MINIO_NOTIFY_AMQP_NO_WAIT_RABBITMQ
              value: "on"
            - name: MINIO_NOTIFY_AMQP_DURABLE_RABBITMQ
              value: "on"
            - name: MINIO_NOTIFY_AMQP_DELIVERY_MODE_RABBITMQ
              value: "1"
          volumeMounts:
            - mountPath: /data
              name: s3-data
          resources:  # TODO: tune
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "1"
          readinessProbe:
            exec:
              command: ["mc", "ready", "local"]
            # httpGet:
            #   port: 9000
            #   scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - name: s3-data
          persistentVolumeClaim:
            claimName: s3-data
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: s3-volume
  labels:
    type: local
    app: minio
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/minio
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: s3-data
  labels:
    app: minio
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi